# Happy Coding!
service: tech-blog-backend

# Latest
frameworkVersion: "3"

# Adapt auto loading for .env content
useDotenv: true

# Adapt sequential variables loading
variablesResolutionMode: 20210326

provider:
  name: aws
  runtime: nodejs14.x
  lambdaHashingVersion: 20201221
  stage: ${opt:stage, 'development'}
  timeout: 30
  memorySize: 1024
  iam:
    role: ${env:AWS_ROLE}
  region: ${opt:region, 'ap-southeast-1'}
  profile: ${env:AWS_SERVERLESS_PROFILE}
  vpc:
    securityGroupIds:
      - ${env:AWS_SECURITY_GROUP}
    subnetIds:
      - ${env:AWS_PRIVATE_SUBNET_A}
      - ${env:AWS_PRIVATE_SUBNET_B}
      - ${env:AWS_PRIVATE_SUBNET_C}

  environment:
    REGION: ${env:AWS_REGION}
    DATABASE_NAME: ${env:DATABASE_NAME}
    DATABASE_HOST: ${env:DATABASE_HOST}
    DATABASE_USER: ${env:DATABASE_USER}
    DATABASE_PASSWORD: ${env:DATABASE_PASSWORD}
    DATABASE_PORT: ${env:DATABASE_PORT}
    NODE_ENV: ${env:NODE_ENV}
    PASSWORD_SALT: ${env:PASSWORD_SALT}

plugins:
  - serverless-offline
  - serverless-plugin-scripts
  - serverless-prune-plugin
  - serverless-plugin-custom-roles

# you can add packaging information here
package:
  patterns:
    - "!.prettierrc.json"
    - "!jest.config.js"
    - "!.npmignore"
    - "!.gitignore"
    - "!README.md"
    - "!eslintrc.json"
    - "!src/tests/**"
    - "!env.example"
    - "!APIDOC.MD"

functions:
  api:
    handler: app.handler
    events:
      - http:
          method: get
          path: /healthcheck
          cors: true

      - http:
          method: post
          path: /api/system/migrations
          cors: true

      - http:
          method: post
          path: /api/users
          cors: true
      - http:
          method: post
          path: /api/users/login
          cors: true
      - http:
          method: delete
          path: /api/users/logout
          cors: true
      - http:
          method: post
          path: /api/users/{userId}/upgrade_mebership
          cors: true
      - http:
          method: get
          path: /api/users/{userId}
          cors: true
      - http:
          method: patch
          path: /api/users/{userId}
          cors: true

      - http:
          method: get
          path: /api/posts
          cors: true
      - http:
          method: post
          path: /api/posts
          cors: true
      - http:
          method: delete
          path: /api/posts/{postId}
          cors: true
      - http:
          method: get
          path: /api/posts/{postId}
          cors: true
      - http:
          method: patch
          path: /api/posts/{postId}
          cors: true

      - http:
          method: get
          path: /api/categories
          cors: true
      - http:
          method: post
          path: /api/categories
          cors: true
      - http:
          method: delete
          path: /api/categories/{categoryId}
          cors: true
      - http:
          method: get
          path: /api/categories/{categoryId}
          cors: true
      - http:
          method: patch
          path: /api/categories/{categoryId}
          cors: true
